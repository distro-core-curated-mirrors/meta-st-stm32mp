From d3046074b9fcca533fd29ddea489b29f05bd208d Mon Sep 17 00:00:00 2001
From: Ludovic Barre <ludovic.barre@foss.st.com>
Date: Thu, 19 Sep 2024 09:54:54 +0200
Subject: [PATCH 2/2] app: start cortexA35 in ns thread

start cortexA35 if it's offline.
Use a high priority thread to be done before test app.

Signed-off-by: Ludovic Barre <ludovic.barre@foss.st.com>
Change-Id: I3f447443a6fc867de081c6b45843fa6d6f2445df
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/TF-M/tf-m-tests/+/405547
---
Upstream-Status: Pending [specific to ST boards]

 app/CMakeLists.txt |  1 +
 app/main_ns.c      | 56 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 57 insertions(+)

diff --git a/app/CMakeLists.txt b/app/CMakeLists.txt
index 514d576..e57689a 100755
--- a/app/CMakeLists.txt
+++ b/app/CMakeLists.txt
@@ -293,6 +293,7 @@ target_sources(tfm_ns
 
 target_link_libraries(tfm_ns
     PRIVATE
+        platform_region_defs
         platform_ns
         CMSIS_5_tfm_ns
         tfm_test_app
diff --git a/app/main_ns.c b/app/main_ns.c
index 9537487..7884559 100644
--- a/app/main_ns.c
+++ b/app/main_ns.c
@@ -26,6 +26,9 @@
 #include "cmsis.h"
 #endif
 
+#include <tfm_platform_system.h>
+#include <uapi/tfm_ioctl_api.h>
+
 /**
  * \brief Modified table template for user defined SVC functions
  *
@@ -139,6 +142,55 @@ __WEAK int32_t tfm_ns_cp_init(void)
     return ARM_DRIVER_OK;
 }
 
+__WEAK const char *cpu_status_str[] = {
+	"offline",
+	"suspended",
+	"running",
+	"crashed",
+	"unknow",
+};
+
+void tfm_ns_start_copro(void *argument)
+{
+	struct cpu_info_res cpu_info;
+	int32_t status, err;
+
+	UNUSED_VARIABLE(argument);
+
+	err = tfm_platform_cpu_info(0, &cpu_info);
+	if (err != TFM_PLATFORM_ERR_SUCCESS) {
+		LOG_MSG("[NS] [ERR] get cpu 0 info fail: %d\r\n", err);
+		return;
+	}
+
+	if (cpu_info.status != CPU_OFFLINE) {
+		LOG_MSG("[NS] [INF] cpu %s already started\r\n", cpu_info.name);
+		LOG_MSG("[NS] [INF] cpu %s status: %s\r\n",
+			cpu_info.name, cpu_status_str[cpu_info.status]);
+		return;
+	}
+
+	LOG_MSG("[NS] [INF] try to start cpu %s: ", cpu_info.name);
+
+	err = tfm_platform_cpu_start(0, &status);
+	if (err != TFM_PLATFORM_ERR_SUCCESS || status != CPU_RUNNING) {
+		LOG_MSG("cpu start fail err: %d\r\n", err);
+		return;
+	}
+
+	LOG_MSG("done\r\n");
+}
+
+#ifdef STM32_M33TDCID
+static osThreadFunc_t ca35_thread_func = tfm_ns_start_copro;
+static const osThreadAttr_t ca35_thread_attr = {
+    .name = "CA35_thread",
+    .stack_size = 1024U,
+    .tz_module = ((TZ_ModuleId_t)TFM_DEFAULT_NSID),
+    .priority = osPriorityHigh,
+};
+#endif
+
 /**
  * \brief main() function
  */
@@ -172,6 +224,10 @@ int main(void)
     (void) osThreadNew(mailbox_thread_func, NULL, &mailbox_thread_attr);
 #endif
 
+#ifdef STM32_M33TDCID
+    (void) osThreadNew(ca35_thread_func, NULL, &ca35_thread_attr);
+#endif
+
     (void) osThreadNew(thread_func, NULL, &thread_attr);
 
     LOG_MSG("Non-Secure system starting...\r\n");
-- 
2.34.1

